package controller;

import roadInfo;

component getBrake{
	ports 
		in Q(0 m/s : 0.001 m/s : 75 m/s) maxSpeed[20],
		in Q(0 m/s : 0.001 m/s : 75 m/s) allowedSpeed,
		in Q(0 m/s : 0.001 m/s : 75 m/s) currSpeed,
		in roadInfo segments[20],

		out (0 : 0.00001 :  1) brakePedal; 
		
		
	implementation Math{
		if (currSpeed > allowedSpeed){
			brakePedal = ((currSpeed-allowedSpeed)/allowedSpeed);
		}else{
			brakePedal = 0;
			Z(0:1:19) segNumber = 0;
			Q(0: 0.001: 5625) speedSqr = currSpeed*currSpeed;
			Q(0: 0.001: oo) maxLookAheadDist = speedSqr/(2*seg.frictionCoefficient*9.81);
			Q(0: 0.001: 5625) lookaheadDist = segments[segNumber].distToSegEnd;
			Q(0 m/s : 0.001 m/s : 75 m/s ) maxSpeedSeg = maxSpeed[0];
				
			if (maxSpeedSeg < currSpeed) {
				brakePedal = 1;
			}else{
				while (lookaheadDist < maxLookAheadDist && brakePedal != 1){
					maxSpeedSeg = maxSpeed[segNumber];
					if(maxSpeed < currSpeed){
						Q(0: 0.001: oo) maxSpeedSegSqr = maxSpeedSeg*maxSpeedSeg;
						Q(0 m : 0.0001 m : 200 m) brakeDist = (speedSqr - maxSpeedSegSqr) / (2*segments[segNumber].frictionCoefficient);
						if(brakeDist >  lookaheadDist){
							brakePedal = 1;
						}
					}
					segNumber = segNumber + 1;
					lookaheadDist = lookaheadDist + roadInfo[segNumber].length;
				}
			}
		}
	}
}
